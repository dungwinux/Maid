# libraries
import os
import configparser


confHeader = """# File generated by Maid - DO NOT EDIT
"""

# Default directory
appPath = os.getenv('APPDATA')
maidDir = os.fsencode(os.getcwd() + '\\maid\\')
maidConfDir = os.fsencode(appPath + '\\maid\\')
maidTempDir = os.fsencode(os.getenv('TEMP') + '\\maid\\')
maidPackDir = os.fsencode(os.fsdecode(maidDir) + 'pkg\\')


def ReadConf():
    """Read configuration in designated location"""

    global maidDir, maidConfDir, maidTempDir, maidPackDir

    print('Reading Config file')
    maidConfFile = os.fsencode(appPath + '\\maid\\maid.conf')
    exists = os.path.isfile(maidConfFile)
    # Try importing configuration, else maid will make one
    if exists:
        conf = configparser.ConfigParser()
        conf.read(maidConfFile)

        maidDir = os.fsencode(conf['options']['rootDir'])
        maidConfDir = os.fsencode(conf['options']['confDir'])
        maidTempDir = os.fsencode(conf['options']['tempDir'])
        maidPackDir = os.fsencode(conf['options']['packDir'])
    else:
        MakeConf()


def MakeConf():
    """Create new configuration in designated location"""

    # Maid config.maidDir
    if not os.path.isdir(maidConfDir):
        os.mkdir(maidConfDir)
    os.chdir(maidConfDir)
    print(f"Config directory: {os.getcwd()}")

    # Config file
    config = configparser.ConfigParser()
    config['options'] = {
        'rootDir': os.fsdecode(maidDir),
        'confDir': os.fsdecode(maidConfDir),
        'tempDir': os.fsdecode(maidTempDir),
        'packDir': os.fsdecode(maidPackDir),
        'logFile': ''}
    with open(os.fsencode('maid.conf'), 'w') as configfile:
        configfile.write(confHeader)
        config.write(configfile)


def FirstTimeSetup():

    print("Running First-Time-Setup")

    cwd = os.getcwd()

    # TaskList file
    # taskList = configparser.ConfigParser()
    # taskList['list'] = {
    #     'GitPkg': 'False'}
    # with open(os.fsencode('list.conf'), 'w') as taskfile:
    #     taskfile.write(confHeader)
    #     taskList.write(taskfile)

    # Pkg maidDir
    os.chdir(maidDir)
    if not os.path.isdir(maidDir):
        os.mkdir(maidDir)

    if not os.path.isdir('list/'):
        os.mkdir('list/')
    if not os.path.isdir('pkg/'):
        os.mkdir('pkg/')

    os.chdir(cwd)


ReadConf()

# Check for prepared directory
# If not, Maid will try to create `maid` file in order to mark folder

if not os.path.isfile('maid'):
    with open('maid', 'w+') as f:
        FirstTimeSetup()

os.chdir(maidConfDir)